<?php

/**
 * @file
 * Contains visualn.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\visualn\Entity\VisualNStyle;
use Drupal\visualn\Entity\VisualNDrawer;
use Drupal\visualn\Entity\VisualNSetup;
use Drupal\Core\Template\Attribute;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_help().
 */
function visualn_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the visualn module.
    case 'help.page.visualn':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Data visualization api') . '</p>';
      return $output;

    default:
  }
}

/**
 * Gets an array of image styles suitable for using as select list options.
 *
 * @param $include_empty
 *   If TRUE a '- None -' option will be inserted in the options array.
 * @return
 *   Array of image styles both key and value are set to style name.
 */
function visualn_style_options($include_empty = TRUE) {
  $styles = VisualNStyle::loadMultiple();
  $options = array();
  if ($include_empty && !empty($styles)) {
    $options[''] = t('- None -');
  }
  foreach ($styles as $name => $style) {
    $options[$name] = $style->label();
  }

  if (empty($options)) {
    $options[''] = t('No defined styles');
  }
  return $options;
}

function visualn_subdrawer_options($include_empty = TRUE) {
  $subdrawers = VisualNDrawer::loadMultiple();
  $options = array();
  if ($include_empty && !empty($subdrawers)) {
    $options[''] = t('- None -');
  }
  foreach ($subdrawers as $name => $subdrawer) {
    $options[$name] = $subdrawer->label();
  }

  if (empty($options)) {
    $options[''] = t('No defined subdrawers');
  }
  return $options;
}

function visualn_setup_options($include_empty = TRUE) {
  $setups = VisualNSetup::loadMultiple();
  $options = array();
  if ($include_empty && !empty($setups)) {
    $options[''] = t('- None -');
  }
  foreach ($setups as $name => $setup) {
    $options[$name] = $setup->label();
  }

  if (empty($options)) {
    $options[''] = t('No defined setups');
  }
  return $options;
}

/**
 * Implements hook_visualn_raw_resource_format_info_alter().
 */
function visualn_visualn_raw_resource_format_info_alter(&$definitions) {
  // @todo: Temporarily add all plugins to "defaut" group. This should
  //   be set in each specific plugin annotation.
  foreach ($definitions as $k => $definition) {
    $definitions[$k]['groups'][] = 'default';
  }
}
